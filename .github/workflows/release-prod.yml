name: Deploy Release
on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
env:
  CI: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - name: Install cargo-edit
        run: |
          cargo install cargo-edit
      - name: Update Cargo Version
        env:
          VERSION: ${{ github.head_ref || github.ref_name }}
        run: cargo set-version ${{ env.VERSION }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: doclytics-${{ env.BRANCH_NAME }}-${{ matrix.os }}
          path: |
            ./target/${{ matrix.target }}/release/doclytics${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      - name: Get Release Upload URL
        id: get_upload_url
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        shell: bash
        run: |
          upload_url=$(curl -H "Authorization: token $GITHUB_TOKEN" \
                https://api.github.com/repos/${{ github.repository }}/releases/tags/${BRANCH_NAME} \
                | jq -r '.upload_url' | sed 's/{?name,label}//')
          echo "UPLOAD_URL=${upload_url}" >> $GITHUB_OUTPUT
      - name: Upload Asset
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          ASSET_PATH: ./target/${{ matrix.target }}/release/doclytics${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          ASSET_NAME: doclytics-${{ env.BRANCH_NAME }}-${{ matrix.os }}
          UPLOAD_URL: ${{ steps.get_upload_url.outputs.UPLOAD_URL }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/zip" --data-binary @$ASSET_PATH "${UPLOAD_URL}?name=${ASSET_NAME}&label=${ASSET_NAME}"
  build-docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    if: ${{ github.ref }} != 'master' && ${{ github.ref }} != 'development'
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build and push
        env:
          VERSION: ${{ github.head_ref || github.ref_name }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/doclytics:${{ env.BRANCH_NAME }}
          platforms: linux/amd64,linux/arm64
      - name: Build and push to GitHub Container Registry
        env:
          VERSION: ${{ github.head_ref || github.ref_name }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/b-urb/doclytics:${{ env.BRANCH_NAME }}
          platforms: linux/amd64,linux/arm64

